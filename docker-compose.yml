services:
  # API Server - REST API for task management
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: slack-queue-api
    ports:
      - "5000:5000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./.env:/app/.env
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=5000
      - API_DEBUG=false
    command: python src/api_server.py
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Cron Job Service - Processes Slack commands periodically
  cron:
    build:
      context: .
      dockerfile: Dockerfile.cron
    container_name: slack-queue-cron
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./.env:/app/.env
    environment:
      - PYTHONUNBUFFERED=1
    command: |
      sh -c "
        echo '*/5 * * * * cd /app && python src/cron_job.py >> /app/logs/cron.log 2>&1' > /etc/cron.d/slack-queue &&
        chmod 0644 /etc/cron.d/slack-queue &&
        crontab /etc/cron.d/slack-queue &&
        cron -f
      "
    restart: unless-stopped
    depends_on:
      - api

volumes:
  queue_data:
    driver: local
  queue_logs:
    driver: local